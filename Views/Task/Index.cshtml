
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Task/Tasks_Layout.cshtml";
}
@model TESTT.Models.TasksViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- Boxicons -->
    <link href='https://unpkg.com/boxicons@2.0.9/css/boxicons.min.css' rel='stylesheet'>
    <!-- My CSS -->
    <link rel="stylesheet" href="~/css/Dashboard/style.css">

    <title>Tasks</title>
</head>
<body>
    <!-- SIDEBAR -->
    <section id="sidebar">
        <a href="@Url.Action("Index", "Dashboard")" class="brand">
            <img src="~/Dashboard_Images/Main.png" alt="CatchTIME" width="200px" height="200px" id="logo-collapse">
        </a>
        <ul class="side-menu top">
            <li>
                <a href="@Url.Action("Index", "Dashboard")">
                    <i class='bx bxs-dashboard'></i>
                    <span class="text">Dashboard</span>
                </a>
            </li>
            <li class="active">
                <a href="@Url.Action("Index", "Tasks")">
                    <i class='bx bxs-check-circle'></i>
                    <span class="text">Tasks</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class='bx bxs-bar-chart-alt-2'></i>
                    <span class="text">Insights</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class='bx bxs-timer'></i>
                    <span class="text">Pomodoro</span>
                </a>
            </li>
            <li>
                <a href="#">
                    <i class='bx bxs-calendar'></i>
                    <span class="text">Calendar</span>
                </a>
            </li>
        </ul>
        <ul class="side-menu">
            <li>
                <a href="#">
                    <i class='bx bxs-cog'></i>
                    <span class="text">Settings</span>
                </a>
            </li>
            <li>
                <a href="#" class="logout">
                    <i class='bx bxs-log-out-circle'></i>
                    <span class="text">Logout</span>
                </a>
            </li>
        </ul>
    </section>
    <!-- SIDEBAR -->
    <!-- CONTENT -->
    <section id="content">
 
        <!-- MAIN -->
        <main>
            <div class="head-title">
                <div class="left">
                    <h1>Tasks</h1>
                    <ul class="breadcrumb">
                        <li>
                            <a href="#">Tasks</a>
                        </li>
                        <li><i class='bx bx-chevron-right'></i></li>
                        <li>
                            <a class="active" href="#">Home</a>
                        </li>
                    </ul>
                </div>
            </div>

            <div class="box-container">
                <!-- Section 1: Lists -->
                <div class="box">
                    <h3>Lists</h3>
                    <ul>
                        @foreach (var list in Model.Lists)
                        {
                            <li>
                                <a href="#" onclick="showTasks(@list.ListId)">@list.ListTitle</a>
                            </li>
                        }
                    </ul>
                </div>

                <!-- Section 2: Tasks in Selected List -->
                <div class="box">
                    <h3>Tasks</h3>
                    <ul id="tasks-list">
                        <!-- Tasks will be loaded here via JavaScript -->
                    </ul>
                    <a href="@Url.Action("Create", "Tasks")" class="btn">Add Task</a>
                </div>

                <!-- Section 3: Task Details -->
                <div class="box" id="task-details">
                    <h3>Task Details</h3>
                    <div id="details-content">
                        <!-- Task details will be loaded here via JavaScript -->
                    </div>
                </div>
            </div>
        </main>
        <!-- MAIN -->
    </section>
    <!-- CONTENT -->

    <script src="~/js/Dashboard_js.js"></script>
    <script>
        function showTasks(listId) {
            // Fetch tasks for the selected list via AJAX
            fetch(`@Url.Action("GetTasksByList", "Tasks")?listId=${listId}`)
                .then(response => response.json())
                .then(data => {
                    const tasksList = document.getElementById('tasks-list');
                    tasksList.innerHTML = '';

                    data.forEach(task => {
                        const taskItem = document.createElement('li');
                        taskItem.textContent = task.TaskTitle;
                        taskItem.onclick = () => showTaskDetails(task.TaskId);

                        const editButton = document.createElement('button');
                        editButton.textContent = 'Edit';
                        editButton.onclick = () => window.location.href = `@Url.Action("Edit", "Tasks")/${task.TaskId}`;

                        const deleteButton = document.createElement('button');
                        deleteButton.textContent = 'Delete';
                        deleteButton.onclick = () => deleteTask(task.TaskId);

                        taskItem.appendChild(editButton);
                        taskItem.appendChild(deleteButton);
                        tasksList.appendChild(taskItem);
                    });
                });
        }

        function showTaskDetails(taskId) {
            // Fetch task details via AJAX
            fetch(`@Url.Action("Details", "Tasks")/${taskId}`)
                .then(response => response.text())
                .then(data => {
                    const detailsContent = document.getElementById('details-content');
                    detailsContent.innerHTML = data;
                });
        }

        function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                fetch(`@Url.Action("DeleteConfirmed", "Tasks")/${taskId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': '@(Html.AntiForgeryToken().ToString())'
                    }
                }).then(response => {
                    if (response.ok) {
                        showTasks(currentListId); // Refresh the task list
                    }
                });
            }
        }
    </script>
</body>
</html>
